"use client"

import { useState } from "react"
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
import { Button } from "@/components/ui/button"
import { Badge } from "@/components/ui/badge"
import { Separator } from "@/components/ui/separator"
import { CurrencyConverter } from "@/components/ui/currency-converter"
import { 
    Check, 
    Star, 
    ArrowRight, 
    ArrowLeft, 
    Users, 
    Building, 
    Zap, 
    MessageSquare, 
    Headphones, 
    Wrench,
    Globe,
    Calendar,
    Calculator
} from "lucide-react"

export default function CustomQuotePage() {
    // ÏúÑÏ†ÄÎìú Îã®Í≥Ñ ÏÉÅÌÉú
    const [currentStep, setCurrentStep] = useState(1)
    const [quoteData, setQuoteData] = useState({
        needs: [],
        companySize: '',
        selectedProducts: [],
        customizations: {},
        finalQuote: null
    })

    // 1Îã®Í≥Ñ: ÎπÑÏ¶àÎãàÏä§ ÎãàÏ¶à ÌååÏïÖ
    const businessNeeds = [
        {
            id: 'customer-support',
            title: 'Í≥†Í∞ù ÏßÄÏõê Í∞úÏÑ†',
            description: 'Í≥†Í∞ù ÏùëÎãµ ÏãúÍ∞Ñ Îã®Ï∂ï Î∞è ÎßåÏ°±ÎèÑ Ìñ•ÏÉÅ',
            icon: Headphones,
            color: 'bg-blue-50 border-blue-200 text-blue-700',
            products: ['freshdesk', 'freshchat', 'freddy-ai']
        },
        {
            id: 'team-collaboration',
            title: 'ÌåÄ ÌòëÏóÖ Í∞ïÌôî',
            description: 'ÌîÑÎ°úÏ†ùÌä∏ Í¥ÄÎ¶¨ Î∞è ÌòëÏóÖ Ìö®Ïú®ÏÑ± Ï¶ùÎåÄ',
            icon: Users,
            color: 'bg-green-50 border-green-200 text-green-700',
            products: ['google-workspace', 'monday-work', 'monday-service']
        },
        {
            id: 'sales-management',
            title: 'ÏòÅÏóÖ ÌîÑÎ°úÏÑ∏Ïä§ ÏµúÏ†ÅÌôî',
            description: 'CRM Î∞è ÏòÅÏóÖ Í¥ÄÎ¶¨ Ï≤¥Í≥ÑÌôî',
            icon: MessageSquare,
            color: 'bg-purple-50 border-purple-200 text-purple-700',
            products: ['freshsales', 'monday-sales']
        },
        {
            id: 'it-infrastructure',
            title: 'IT Ïù∏ÌîÑÎùº Í¥ÄÎ¶¨',
            description: 'IT ÏÑúÎπÑÏä§ Î∞è ÏõêÍ≤© Ï†ëÏÜç ÌôòÍ≤Ω Íµ¨Ï∂ï',
            icon: Wrench,
            color: 'bg-orange-50 border-orange-200 text-orange-700',
            products: ['freshservice', 'splashtop']
        }
    ]

    // 2Îã®Í≥Ñ: ÌöåÏÇ¨ Í∑úÎ™®
    const companySizes = [
        { id: 'startup', label: 'Ïä§ÌÉÄÌä∏ÏóÖ (1-10Î™Ö)', range: '1-10', multiplier: 1 },
        { id: 'small', label: 'Ï§ëÏÜåÍ∏∞ÏóÖ (11-50Î™Ö)', range: '11-50', multiplier: 1.2 },
        { id: 'medium', label: 'Ï§ëÍ≤¨Í∏∞ÏóÖ (51-200Î™Ö)', range: '51-200', multiplier: 1.5 },
        { id: 'enterprise', label: 'ÎåÄÍ∏∞ÏóÖ (200Î™Ö+)', range: '200+', multiplier: 2 }
    ]

    // Ï†úÌíà Îç∞Ïù¥ÌÑ∞Î≤†Ïù¥Ïä§
    const productDatabase = {
        {
            id: 'customer-experience',
            title: 'Í≥†Í∞ù Í≤ΩÌóò Í¥ÄÎ¶¨',
            icon: 'üéØ',
            description: 'Ïò¥ÎãàÏ±ÑÎÑê Í≥†Í∞ù ÏßÄÏõê, ÎùºÏù¥Î∏å Ï±ÑÌåÖ, ÏΩúÏÑºÌÑ∞Î°ú ÏôÑÎ≤ΩÌïú Í≥†Í∞ù Í≤ΩÌóòÏùÑ Ï†úÍ≥µÌïòÏÑ∏Ïöî',
        },
        {
            id: 'collaboration',
            title: 'ÌòëÏóÖ & ÏÉùÏÇ∞ÏÑ±',
            icon: 'üöÄ',
            description: 'ÌÅ¥ÎùºÏö∞Îìú Í∏∞Î∞ò ÌòëÏóÖÍ≥º ÌîÑÎ°úÏ†ùÌä∏ Í¥ÄÎ¶¨Î°ú ÌåÄ ÏÉùÏÇ∞ÏÑ±ÏùÑ Í∑πÎåÄÌôîÌïòÏÑ∏Ïöî',
        },
        {
            id: 'infrastructure',
            title: 'IT Ïù∏ÌîÑÎùº Í¥ÄÎ¶¨',
            icon: 'üõ†Ô∏è',
            description: 'ITSMÍ≥º ÏõêÍ≤© Ï†ëÏÜçÏúºÎ°ú ÏïàÏ†ïÏ†ÅÏù¥Í≥† Ìö®Ïú®Ï†ÅÏù∏ IT Ïù∏ÌîÑÎùºÎ•º Íµ¨Ï∂ïÌïòÏÑ∏Ïöî',
        }
    ]

    // Î™®Îì† Ï†úÌíà Îç∞Ïù¥ÌÑ∞
    const allProducts = [
        // Í≥†Í∞ù Í≤ΩÌóò Í¥ÄÎ¶¨
        {
            category: 'customer-experience',
            vendor: 'Freshworks',
            name: 'Freshdesk Omni',
            description: 'Ïò¥ÎãàÏ±ÑÎÑê Í≥†Í∞ù ÏßÄÏõê ÌîåÎû´Ìèº',
            popular: true,
            plans: [
                { name: 'Growth', price: '$29/Ïõî', originalPrice: '$35/Ïõî', features: ['Ïò¥ÎãàÏ±ÑÎÑê ÌÜµÌï©', 'AI ÏûêÎèô ÏùëÎãµ', 'Î¨¥Ï†úÌïú ÏóêÏù¥Ï†ÑÌä∏', 'Í∏∞Î≥∏ ÏûêÎèôÌôî'], popular: false },
                { name: 'Pro', price: '$69/Ïõî', originalPrice: '$83/Ïõî', features: ['Growth Í∏∞Îä• Ìè¨Ìï®', 'ÎßûÏ∂§Ìòï Ìè¨ÌÑ∏', 'API Ïï°ÏÑ∏Ïä§', 'Í≥†Í∏â ÏûêÎèôÌôî'], popular: true },
                { name: 'Enterprise', price: '$109/Ïõî', originalPrice: '$131/Ïõî', features: ['Pro Í∏∞Îä• Ìè¨Ìï®', 'Í∞êÏÇ¨ Î°úÍ∑∏', 'Í≥†Í∏â Î≥¥Ïïà', 'Î¨¥Ï†úÌïú ÌÜµÌï©'], popular: false }
            ]
        },
        {
            category: 'customer-experience',
            vendor: 'Freshworks',
            name: 'Freshchat',
            description: 'Ïã§ÏãúÍ∞Ñ ÎùºÏù¥Î∏å Ï±ÑÌåÖ',
            popular: false,
            plans: [
                { name: 'Free', price: 'Î¨¥Î£å', originalPrice: null, features: ['10Î™Ö ÏóêÏù¥Ï†ÑÌä∏', 'Í∏∞Î≥∏ Ï±ÑÌåÖ', 'Î™®Î∞îÏùº Ïï±', 'Í∏∞Î≥∏ Î≥¥Í≥†ÏÑú'], popular: false },
                { name: 'Growth', price: '$19/Ïõî', originalPrice: '$23/Ïõî', features: ['Î¨¥Ï†úÌïú ÏóêÏù¥Ï†ÑÌä∏', 'ÌåÄ Î∞õÏùÄÌé∏ÏßÄÌï®', 'FAQ Î¥á', 'Î∞©Î¨∏Ïûê Ï†ïÎ≥¥'], popular: true },
                { name: 'Pro', price: '$49/Ïõî', originalPrice: '$59/Ïõî', features: ['Growth Í∏∞Îä• Ìè¨Ìï®', 'Í≥†Í∏â ÏûêÎèôÌôî', 'CRM ÌÜµÌï©', 'API Ïï°ÏÑ∏Ïä§'], popular: false }
            ]
        },
        {
            category: 'customer-experience',
            vendor: 'Freshworks',
            name: 'Freshcaller',
            description: 'ÌÅ¥ÎùºÏö∞Îìú ÏΩúÏÑºÌÑ∞',
            popular: false,
            plans: [
                { name: 'Free', price: 'Î¨¥Î£å', originalPrice: null, features: ['Í∏∞Î≥∏ ÏΩúÏÑºÌÑ∞', 'Ï¢ÖÎüâÏ†ú ÏöîÍ∏à', 'IVR ÏãúÏä§ÌÖú', 'ÌÜµÌôî ÎÖπÏùå'], popular: false },
                { name: 'Growth', price: '$15/Ïõî', originalPrice: '$18/Ïõî', features: ['Ïõî 2,000Î∂Ñ', 'Í∏∞Î≥∏ ÎùºÏö∞ÌåÖ', 'ÌÜµÌôî ÎåÄÍ∏∞Ïó¥', 'Ïã§ÏãúÍ∞Ñ ÎåÄÏãúÎ≥¥Îìú'], popular: true },
                { name: 'Pro', price: '$39/Ïõî', originalPrice: '$47/Ïõî', features: ['Ïõî 3,000Î∂Ñ', 'Í≥†Í∏â ÎùºÏö∞ÌåÖ', 'CRM Ïó∞Îèô', 'Í≥†Í∏â Î∂ÑÏÑù'], popular: false }
            ]
        },
        // ÌòëÏóÖ & ÏÉùÏÇ∞ÏÑ±
        {
            category: 'collaboration',
            vendor: 'Monday.com',
            name: 'Monday Work Management',
            description: 'ÏßÅÍ¥ÄÏ†ÅÏù∏ ÌîÑÎ°úÏ†ùÌä∏ Í¥ÄÎ¶¨',
            popular: true,
            plans: [
                { name: 'Basic', price: '$12/Ïõî', originalPrice: '$14/Ïõî', features: ['Í∏∞Î≥∏ ÎåÄÏãúÎ≥¥Îìú', '5GB Ï†ÄÏû•Í≥µÍ∞Ñ', 'Î¨¥Ï†úÌïú Î≥¥Îìú', '200+ ÌÖúÌîåÎ¶ø'], popular: false },
                { name: 'Standard', price: '$14/Ïõî', originalPrice: '$17/Ïõî', features: ['ÌÉÄÏûÑÎùºÏù∏ Î∑∞', 'Í≤åÏä§Ìä∏ Ïï°ÏÑ∏Ïä§', '250GB Ï†ÄÏû•', 'Ï∫òÎ¶∞Îçî Î∑∞'], popular: true },
                { name: 'Pro', price: '$24/Ïõî', originalPrice: '$29/Ïõî', features: ['ÏãúÍ∞Ñ Ï∂îÏ†Å', 'Ïª§Ïä§ÌÖÄ ÌïÑÎìú', '1TB Ï†ÄÏû•Í≥µÍ∞Ñ', 'Í≥†Í∏â Í≤ÄÏÉâ'], popular: false }
            ]
        },
        {
            category: 'collaboration',
            vendor: 'Google',
            name: 'Google Workspace',
            description: 'ÌÅ¥ÎùºÏö∞Îìú ÌòëÏóÖ ÏÜîÎ£®ÏÖò',
            popular: false,
            plans: [
                { name: 'Business Starter', price: '$6/Ïõî', originalPrice: null, features: ['Gmail', '30GB Ï†ÄÏû•Í≥µÍ∞Ñ', 'Meet 100Î™Ö', 'ÌëúÏ§Ä Î≥¥Ïïà'], popular: false },
                { name: 'Business Standard', price: '$12/Ïõî', originalPrice: null, features: ['2TB Ï†ÄÏû•Í≥µÍ∞Ñ', 'Meet 150Î™Ö', 'ÎÖπÌôî Í∏∞Îä•', 'Í≥µÏú† ÎìúÎùºÏù¥Î∏å'], popular: true },
                { name: 'Business Plus', price: '$18/Ïõî', originalPrice: null, features: ['5TB Ï†ÄÏû•Í≥µÍ∞Ñ', 'Meet 500Î™Ö', 'Vault Î≥¥Í¥Ä', 'Í≥†Í∏â Î≥¥Ïïà'], popular: false }
            ]
        },
        // IT Ïù∏ÌîÑÎùº Í¥ÄÎ¶¨
        {
            category: 'infrastructure',
            vendor: 'Freshworks',
            name: 'Freshservice',
            description: 'IT ÏÑúÎπÑÏä§ Í¥ÄÎ¶¨ (ITSM)',
            popular: true,
            plans: [
                { name: 'Starter', price: '$19/Ïõî', originalPrice: '$23/Ïõî', features: ['Ìã∞Ïºì Í¥ÄÎ¶¨', 'ITIL ÌîÑÎ°úÏÑ∏Ïä§', 'ÏóêÏÖã Í¥ÄÎ¶¨', 'Í∏∞Î≥∏ ÏûêÎèôÌôî'], popular: false },
                { name: 'Growth', price: '$49/Ïõî', originalPrice: '$59/Ïõî', features: ['ÏõåÌÅ¨ÌîåÎ°úÏö∞ ÏûêÎèôÌôî', 'SLA Í¥ÄÎ¶¨', 'Í≥†Í∏â Î¶¨Ìè¨ÌåÖ', 'Î¨∏Ï†ú Í¥ÄÎ¶¨'], popular: true },
                { name: 'Pro', price: '$99/Ïõî', originalPrice: '$119/Ïõî', features: ['Î≥ÄÍ≤Ω Í¥ÄÎ¶¨', 'Î¶¥Î¶¨Ï¶à Í¥ÄÎ¶¨', 'ÌîÑÎ°úÏ†ùÌä∏ Í¥ÄÎ¶¨', 'Í≥†Í∏â Î∂ÑÏÑù'], popular: false }
            ]
        },
        {
            category: 'infrastructure',
            vendor: 'Splashtop',
            name: 'Splashtop Business Access',
            description: 'ÏõêÍ≤© Îç∞Ïä§ÌÅ¨ÌÜ± Ïï°ÏÑ∏Ïä§',
            popular: false,
            plans: [
                { name: 'Solo', price: '$5/Ïõî', originalPrice: null, features: ['1 ÏÇ¨Ïö©Ïûê', 'Î¨¥Ï†úÌïú Ïª¥Ìì®ÌÑ∞', 'ÌååÏùº Ï†ÑÏÜ°', 'Ïù∏ÏáÑ ÏßÄÏõê'], popular: false },
                { name: 'Pro', price: '$8.25/Ïõî', originalPrice: '$9.90/Ïõî', features: ['ÎπÑÏ¶àÎãàÏä§ Í∏∞Îä•', 'ÏÑ∏ÏÖò ÎÖπÌôî', 'ÏõêÍ≤© Ïû¨Î∂ÄÌåÖ', 'Í∑∏Î£π Í¥ÄÎ¶¨'], popular: true }
            ]
        }
    ]

    // ÌòÑÏû¨ ÏÑ†ÌÉùÎêú Ïπ¥ÌÖåÍ≥†Î¶¨Ïùò Ï†úÌíàÎì§
    const categoryProducts = allProducts.filter(product => product.category === selectedCategory)
    const currentCategory = categories.find(cat => cat.id === selectedCategory)

    // Î≤§Îçî Îã®ÏúÑÎ°ú Í∑∏Î£πÌôîÌïòÏó¨ UX Í∞ÄÎèÖÏÑ± Ìñ•ÏÉÅ
    const vendorGroups = categoryProducts.reduce((groups, product) => {
        const group = groups.find((item) => item.vendor === product.vendor)

        if (group) {
            group.products.push(product)
        } else {
            groups.push({
                vendor: product.vendor,
                products: [product]
            })
        }

        return groups
    }, [] as { vendor: string; products: typeof categoryProducts }[])

    return (
        <div className="min-h-screen bg-background">
            <div className="container mx-auto px-4 py-16">
                {/* Ìó§Îçî ÏÑπÏÖò */}
                <div className="text-center mb-16">
                    <h1 className="text-4xl font-bold mb-4">ÏöîÍ∏àÏ†ú</h1>
                    <p className="text-xl text-muted-foreground mb-8">
                        Í∑ÄÌïòÏùò ÎπÑÏ¶àÎãàÏä§Ïóê ÎßûÎäî ÏµúÏ†ÅÏùò ÏÜîÎ£®ÏÖòÏùÑ Ï∞æÏïÑÎ≥¥ÏÑ∏Ïöî
                    </p>
                </div>

                {/* Ïπ¥ÌÖåÍ≥†Î¶¨ ÌÉ≠ ÎÑ§ÎπÑÍ≤åÏù¥ÏÖò */}
                <div className="grid w-full grid-cols-3 mb-12 h-14 p-1 bg-muted rounded-lg">
                    {categories.map((category) => (
                        <button
                            key={category.id}
                            onClick={() => setSelectedCategory(category.id)}
                            className={`flex items-center justify-center gap-2 rounded-md text-sm font-medium transition-all ${selectedCategory === category.id
                                ? 'bg-background text-foreground shadow-sm'
                                : 'text-muted-foreground hover:text-foreground'
                                }`}
                        >
                            <span className="text-base">{category.icon}</span>
                            <span className="hidden sm:inline">{category.title}</span>
                        </button>
                    ))}
                </div>

                {/* Ïπ¥ÌÖåÍ≥†Î¶¨ ÏÑ§Î™Ö */}
                <div className="text-center mb-12">
                    <h2 className="text-2xl font-semibold mb-2">{currentCategory?.title}</h2>
                    <p className="text-muted-foreground">{currentCategory?.description}</p>
                </div>

                {/* ÏÜîÎ£®ÏÖò ÌååÏù∏Îçî ÏÑπÏÖò */}
                <div className="mb-16">
                    <Card className="p-8 bg-gradient-to-br from-primary/5 to-secondary/5">
                        <div className="text-center mb-8">
                            <h3 className="text-2xl font-bold mb-2">üîç ÏÜîÎ£®ÏÖò ÌååÏù∏Îçî</h3>
                            <p className="text-muted-foreground">
                                Î™á Í∞ÄÏßÄ ÏßàÎ¨∏ÏúºÎ°ú Í∑ÄÌïòÏóêÍ≤å ÏµúÏ†ÅÌôîÎêú ÏÜîÎ£®ÏÖòÍ≥º Í∞ÄÍ≤©ÏùÑ Ï∞æÏïÑÎìúÎ¶ΩÎãàÎã§
                            </p>
                        </div>

                        <div className="grid grid-cols-1 md:grid-cols-3 gap-4 mb-6">
                            <Button
                                variant="outline"
                                className="h-20 p-4 flex flex-col items-center gap-2"
                                onClick={() => {/* TODO: ÏÜîÎ£®ÏÖò ÌååÏù∏Îçî Î°úÏßÅ */ }}
                            >
                                <span className="text-2xl">üìû</span>
                                <span className="font-medium">Í≥†Í∞ù ÏùëÎãµ ÏÜçÎèÑ Í∞úÏÑ†</span>
                            </Button>
                            <Button
                                variant="outline"
                                className="h-20 p-4 flex flex-col items-center gap-2"
                            >
                                <span className="text-2xl">ü§ù</span>
                                <span className="font-medium">ÌåÄ ÌòëÏóÖ Ìö®Ïú®ÏÑ± Ìñ•ÏÉÅ</span>
                            </Button>
                            <Button
                                variant="outline"
                                className="h-20 p-4 flex flex-col items-center gap-2"
                            >
                                <span className="text-2xl">üîß</span>
                                <span className="font-medium">IT Ïù∏ÌîÑÎùº ÏïàÏ†ïÌôî</span>
                            </Button>
                        </div>

                        <div className="text-center">
                            <Button size="lg">
                                ÎßûÏ∂§ ÏÜîÎ£®ÏÖò Ï∞æÍ∏∞ ÏãúÏûë
                            </Button>
                        </div>
                    </Card>
                </div>

                {/* Î≤§Îçî Í∑∏Î£π ÏÑπÏÖò */}
                <div className="space-y-16 mb-16">
                    {vendorGroups.map((group) => (
                        <section key={group.vendor} className="space-y-8">
                            <div className="flex flex-col gap-2 sm:flex-row sm:items-center sm:justify-between">
                                <div>
                                    <h3 className="text-xl font-semibold">{group.vendor}</h3>
                                    <p className="text-sm text-muted-foreground">
                                        {currentCategory?.title} Ïπ¥ÌÖåÍ≥†Î¶¨Ïùò {group.products.length}Í∞ú ÏÜîÎ£®ÏÖò
                                    </p>
                                </div>
                                <div className="flex items-center gap-2 text-xs text-muted-foreground">
                                    <span>ÏúÑÎëêÏÜåÌîÑÌä∏ Ï∂îÏ≤ú Ìè¨Ìä∏Ìè¥Î¶¨Ïò§</span>
                                    <span className="hidden sm:inline">¬∑</span>
                                    <span>Ï†ÑÎ¨∏Í∞Ä ÏÉÅÎã¥ Ïó∞Í≥Ñ</span>
                                </div>
                            </div>

                            <div className="grid grid-cols-1 xl:grid-cols-2 gap-6">
                                {group.products.map((product) => (
                                    <Card key={product.name} className="relative h-full">
                                        {product.popular && (
                                            <div className="absolute -top-3 left-4 z-10">
                                                <Badge variant="default" className="bg-primary text-primary-foreground">
                                                    <Star className="w-3 h-3 mr-1" />
                                                    Ïù∏Í∏∞ Ï†úÌíà
                                                </Badge>
                                            </div>
                                        )}

                                        <CardHeader className="pb-4">
                                            <div className="flex flex-col gap-2">
                                                <div className="flex items-center gap-2 text-sm text-muted-foreground">
                                                    <Badge variant="outline" className="w-fit">
                                                        {product.vendor}
                                                    </Badge>
                                                    <span>{product.plans.length}Í∞ú ÏöîÍ∏àÏ†ú Ï†úÍ≥µ</span>
                                                </div>
                                                <CardTitle className="text-2xl">
                                                    {product.name}
                                                </CardTitle>
                                                <CardDescription>{product.description}</CardDescription>
                                            </div>
                                        </CardHeader>

                                        <CardContent className="space-y-6">
                                            <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
                                                {product.plans.map((plan, index) => (
                                                    <div
                                                        key={index}
                                                        className={`relative rounded-lg border p-4 transition-all ${plan.popular
                                                            ? 'border-primary bg-primary/5 ring-1 ring-primary/20'
                                                            : 'border-border hover:border-primary/40'
                                                            }`}
                                                    >
                                                        {plan.popular && (
                                                            <div className="absolute -top-2 left-1/2 -translate-x-1/2">
                                                                <Badge variant="default" className="text-xs">
                                                                    Ï∂îÏ≤ú ÏöîÍ∏àÏ†ú
                                                                </Badge>
                                                            </div>
                                                        )}

                                                        <div className="mb-4 text-center">
                                                            <h4 className="mb-1 text-sm font-semibold tracking-tight">{plan.name}</h4>
                                                            <div className="space-y-1">
                                                                <p className="text-lg font-bold text-primary">{plan.price}</p>
                                                                {plan.originalPrice && (
                                                                    <span className="text-xs text-muted-foreground line-through">
                                                                        {plan.originalPrice}
                                                                    </span>
                                                                )}
                                                            </div>
                                                        </div>

                                                        <ul className="mb-5 space-y-1">
                                                            {plan.features.slice(0, 3).map((feature, featureIndex) => (
                                                                <li key={featureIndex} className="flex items-start gap-2 text-xs">
                                                                    <Check className="mt-0.5 h-3 w-3 shrink-0 text-green-500" />
                                                                    <span>{feature}</span>
                                                                </li>
                                                            ))}
                                                            {plan.features.length > 3 && (
                                                                <li className="text-xs text-muted-foreground">
                                                                    +{plan.features.length - 3}Í∞ú Í∏∞Îä• Îçî Î≥¥Í∏∞
                                                                </li>
                                                            )}
                                                        </ul>

                                                        <Button
                                                            className="w-full"
                                                            size="sm"
                                                            variant={plan.popular ? 'default' : 'outline'}
                                                        >
                                                            {plan.price === 'Î¨¥Î£å' ? 'Î¨¥Î£å ÏãúÏûë' : 'ÏÉÅÎã¥ ÏöîÏ≤≠'}
                                                        </Button>
                                                    </div>
                                                ))}
                                            </div>

                                            <div className="flex flex-col gap-3 rounded-lg border border-dashed p-4 text-sm text-muted-foreground md:flex-row md:items-center md:justify-between">
                                                <span>Ïù¥ Ï†úÌíàÍµ∞Ïùò ÎèÑÏûÖÍ≥º Ïö¥ÏòÅÍπåÏßÄ ÏúÑÎëêÏÜåÌîÑÌä∏ Ïª®ÏÑ§ÌÑ¥Ìä∏Í∞Ä Ìï®ÍªòÌï©ÎãàÎã§.</span>
                                                <Button size="sm" variant="ghost" className="self-start md:self-auto">
                                                    ÌååÌä∏ÎÑà ÏßÄÏõê Î¨∏Ïùò
                                                </Button>
                                            </div>
                                        </CardContent>
                                    </Card>
                                ))}
                            </div>
                        </section>
                    ))}
                </div>

                {/* ÌïòÎã® CTA */}
                <div className="text-center">
                    <h3 className="text-xl font-semibold mb-4">Í∂ÅÍ∏àÌïú Ï†êÏù¥ ÏûàÏúºÏã†Í∞ÄÏöî?</h3>
                    <p className="text-muted-foreground mb-6">
                        Ï†ÑÎ¨∏ Ïª®ÏÑ§ÌÑ¥Ìä∏Í∞Ä Í∑ÄÌïòÏùò ÎπÑÏ¶àÎãàÏä§Ïóê ÏµúÏ†ÅÌôîÎêú ÏÜîÎ£®ÏÖòÏùÑ Ï†úÏïàÌï¥ÎìúÎ¶ΩÎãàÎã§
                    </p>
                    <div className="flex flex-col sm:flex-row gap-4 justify-center">
                        <Button size="lg">Î¨¥Î£å ÏÉÅÎã¥ Ïã†Ï≤≠</Button>
                        <Button size="lg" variant="outline">Îç∞Î™® Ï≤¥ÌóòÌïòÍ∏∞</Button>
                    </div>
                </div>
            </div>
        </div>
    )
}